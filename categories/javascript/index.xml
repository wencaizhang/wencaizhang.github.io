<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>JavaScript on 菠萝头的 7 秒记忆</title>
    <link>https://webjam.cn/categories/javascript/</link>
    <description>Recent content in JavaScript on 菠萝头的 7 秒记忆</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>1052642137@qq.com (wencaizhang)</managingEditor>
    <webMaster>1052642137@qq.com (wencaizhang)</webMaster>
    <copyright>&amp;copy;{year}, All Rights Reserved</copyright>
    <lastBuildDate>Sun, 28 Jun 2020 14:30:51 +0800</lastBuildDate>
    
        <atom:link href="https://webjam.cn/categories/javascript/index.xml" rel="self" type="application/rss+xml" />
    
    
    

      
      <item>
        <title>JavaScript 之深浅拷贝</title>
        <link>https://webjam.cn/posts/2020/clone-object-in-javascript/</link>
        <pubDate>Sun, 28 Jun 2020 14:30:51 +0800</pubDate>
        <author>1052642137@qq.com (wencaizhang)</author>
        <atom:modified>Sun, 28 Jun 2020 14:30:51 +0800</atom:modified>
        <guid>https://webjam.cn/posts/2020/clone-object-in-javascript/</guid>
        <description>[toc] 基本类型和引用类型 先来看看 JavaScript 中两种数据类型有何异同。 基本类型和引用类型的保存方式不同。 基本数据类型是按值访问的。基本数据类型的值保存在栈内</description>
        
        <dc:creator>wencaizhang</dc:creator>
        
        
        
        
          
            
              <category>js</category>
            
          
        
        
          
            
              <category>JavaScript</category>
            
          
        
        
      </item>
      
      <item>
        <title>JavaScript 浮点数的精度问题</title>
        <link>https://webjam.cn/posts/2020/the-precision-of-floating-number-in-javascript/</link>
        <pubDate>Sun, 28 Jun 2020 14:30:51 +0800</pubDate>
        <author>1052642137@qq.com (wencaizhang)</author>
        <atom:modified>Sun, 28 Jun 2020 14:30:51 +0800</atom:modified>
        <guid>https://webjam.cn/posts/2020/the-precision-of-floating-number-in-javascript/</guid>
        <description>来来来，文章开始之前，先回一个问题：0.1 + 0.2 的结果是多少？</description>
        
        <dc:creator>wencaizhang</dc:creator>
        
        
        
        
          
            
              <category>浮点数</category>
            
          
            
              <category>精度</category>
            
          
        
        
          
            
              <category>JavaScript</category>
            
          
        
        
      </item>
      
      <item>
        <title>Vue 项目中权限控制的几种方法</title>
        <link>https://webjam.cn/posts/2020/manage-permission-in-vue-project/</link>
        <pubDate>Sun, 28 Jun 2020 14:30:51 +0800</pubDate>
        <author>1052642137@qq.com (wencaizhang)</author>
        <atom:modified>Sun, 28 Jun 2020 14:30:51 +0800</atom:modified>
        <guid>https://webjam.cn/posts/2020/manage-permission-in-vue-project/</guid>
        <description>按钮级别权限控制 路由（页面）级别权限控制 路由级别的权限控制，主要依赖 vue-router 的几个路由钩子函数。vue-router 的路由钩子主要有以下几项</description>
        
        <dc:creator>wencaizhang</dc:creator>
        
        
        
        
          
            
              <category>vue</category>
            
          
            
              <category>permission</category>
            
          
            
              <category>权限</category>
            
          
        
        
          
            
              <category>JavaScript</category>
            
          
            
              <category>Vue.js</category>
            
          
        
        
      </item>
      
      <item>
        <title>深入理解 Promise（三）— 实现自己的 Promise</title>
        <link>https://webjam.cn/posts/2020/2020-06-20-promise-03-wirte-a-promise/</link>
        <pubDate>Sat, 20 Jun 2020 00:00:00 +0000</pubDate>
        <author>1052642137@qq.com (wencaizhang)</author>
        <atom:modified>Sat, 20 Jun 2020 00:00:00 +0000</atom:modified>
        <guid>https://webjam.cn/posts/2020/2020-06-20-promise-03-wirte-a-promise/</guid>
        <description>手写 Promise</description>
        
        <dc:creator>wencaizhang</dc:creator>
        
        
        
        
          
            
              <category>promise</category>
            
          
            
              <category>异步</category>
            
          
        
        
          
            
              <category>JavaScript</category>
            
          
            
              <category>ES6</category>
            
          
        
        
      </item>
      
      <item>
        <title>深入理解 Promise（二）— ES6 Promise API</title>
        <link>https://webjam.cn/posts/2020/2020-06-19-promise-02-es6-promise-api/</link>
        <pubDate>Fri, 19 Jun 2020 00:00:00 +0000</pubDate>
        <author>1052642137@qq.com (wencaizhang)</author>
        <atom:modified>Fri, 19 Jun 2020 00:00:00 +0000</atom:modified>
        <guid>https://webjam.cn/posts/2020/2020-06-19-promise-02-es6-promise-api/</guid>
        <description>Promise 是一个构造函数，它的使用方式如下： 1 2 3 4 new Promise(function (resolve, reject) { // resolve(value) // reject(reason) }) Promise 接收一个函数作为参数，这个函数有两个参数（函数类型的参数），分别是 resolve 和 re</description>
        
        <dc:creator>wencaizhang</dc:creator>
        
        
        
        
          
            
              <category>promise</category>
            
          
            
              <category>异步</category>
            
          
        
        
          
            
              <category>JavaScript</category>
            
          
            
              <category>ES6</category>
            
          
        
        
      </item>
      
      <item>
        <title>深入理解 Promise（一）— Promise/A&#43; 规范</title>
        <link>https://webjam.cn/posts/2020/2020-06-18-promise-01-promise-standard/</link>
        <pubDate>Thu, 18 Jun 2020 00:00:00 +0000</pubDate>
        <author>1052642137@qq.com (wencaizhang)</author>
        <atom:modified>Thu, 18 Jun 2020 00:00:00 +0000</atom:modified>
        <guid>https://webjam.cn/posts/2020/2020-06-18-promise-01-promise-standard/</guid>
        <description>Promise/A+规范 术语 Promise: 一个有 then 方法的对象或者函数，行为符合本规范 thenable: 一个定义了 then 方法的对象或函数 value: 值，任何 JavaScript 的合法值 execption: 异常，throw</description>
        
        <dc:creator>wencaizhang</dc:creator>
        
        
        
        
          
            
              <category>promise</category>
            
          
            
              <category>异步</category>
            
          
        
        
          
            
              <category>JavaScript</category>
            
          
            
              <category>ES6</category>
            
          
        
        
      </item>
      
      <item>
        <title>不可靠的 undefined</title>
        <link>https://webjam.cn/posts/2020/2020-05-14-undefined-untrustworthy/</link>
        <pubDate>Thu, 14 May 2020 00:00:00 +0000</pubDate>
        <author>1052642137@qq.com (wencaizhang)</author>
        <atom:modified>Thu, 14 May 2020 00:00:00 +0000</atom:modified>
        <guid>https://webjam.cn/posts/2020/2020-05-14-undefined-untrustworthy/</guid>
        <description>JavaScript 中有六种基本数据类型：Number, String, Boolean, Undefined, Null, Symbol(在 ES6 中新增)，除此之外还有一种复杂数据类型 Object。 今天我们聊聊其中的一种类</description>
        
        <dc:creator>wencaizhang</dc:creator>
        
        
        
        
          
            
              <category>js</category>
            
          
            
              <category>undefined</category>
            
          
        
        
          
            
              <category>JavaScript</category>
            
          
        
        
      </item>
      

    
  </channel>
</rss>