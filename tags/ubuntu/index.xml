<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ubuntu on Clarity</title><link>https://example.com/tags/ubuntu/</link><description>Recent content in ubuntu on Clarity</description><generator>Hugo -- gohugo.io</generator><copyright>Copyright © 2018-2021, wencaizhang and the Hugo Authors; all rights reserved.</copyright><lastBuildDate>Sun, 17 Nov 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://example.com/tags/ubuntu/index.xml" rel="self" type="application/rss+xml"/><item><title>Basic Setup for Ubuntu</title><link>https://example.com/2019-11-17/basic-setup-for-ubuntu/</link><pubDate>Sun, 17 Nov 2019 00:00:00 +0000</pubDate><guid>https://example.com/2019-11-17/basic-setup-for-ubuntu/</guid><description>
&lt;blockquote>
&lt;p>Ubuntu 基础设置，包含一些常用软件安装，配置文件修改等等。&lt;/p>
&lt;/blockquote>
&lt;p>这篇文章的意义在于，当你拿到一个新的 Ubuntu 系统之后，直接按照本文的步骤进行设置，就可以得到一个顺手的开发/部署环境。不再需要逐项搜索每个软件的安装步骤了。&lt;/p>
&lt;ul>
&lt;li>设置国内软件镜像源&lt;/li>
&lt;li>node&lt;/li>
&lt;li>git&lt;/li>
&lt;li>docker&lt;/li>
&lt;li>nginx&lt;/li>
&lt;li>oh-my-zsh&lt;/li>
&lt;li>alias&lt;/li>
&lt;li>vim&lt;/li>
&lt;/ul>
&lt;h2 id="设置系统软件镜像源">设置系统软件镜像源&lt;/h2>
&lt;p>配置系统源第一件事是修改镜像源，这样方便后续其他软件的安装。在国内可以选择阿里云的源。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="ln">1&lt;/span>&lt;span class="c1"># 编辑源文件&lt;/span>
&lt;span class="ln">2&lt;/span>sudo vim /etc/apt/sources.list
&lt;span class="ln">3&lt;/span>&lt;span class="c1"># 在VIM编辑器内替换默认源为阿里云&lt;/span>
&lt;span class="ln">4&lt;/span>:0,$ s/archive.ubuntu.com/mirrors.aliyun.com/
&lt;span class="ln">5&lt;/span>&lt;span class="c1"># 保存源文件并退出&lt;/span>
&lt;span class="ln">6&lt;/span>:wq
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="包管理工具安装">包管理工具安装&lt;/h2>
&lt;p>&lt;strong>先更新&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="ln">1&lt;/span>sudo apt update -y &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> sudo apt upgrade -y
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>
&lt;a
href = "https://www.sysgeek.cn/apt-vs-apt-get/"
target="_blank" rel ="noopener"
>Linux中apt与apt-get命令的区别与解释&lt;span>&lt;svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound" style="margin: 0; width: .85em;">&lt;path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z">&lt;/path> &lt;polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9">&lt;/polygon>&lt;/svg>&lt;/span>
&lt;/a>
&lt;/li>
&lt;li>
&lt;a
href = "https://www.cnblogs.com/fenglongyu/p/8654991.html"
target="_blank" rel ="noopener"
>linux命令系列 sudo apt-get update和upgrade的区别&lt;span>&lt;svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound" style="margin: 0; width: .85em;">&lt;path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z">&lt;/path> &lt;polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9">&lt;/polygon>&lt;/svg>&lt;/span>
&lt;/a>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>安装常用软件&lt;/strong>&lt;/p>
&lt;p>通常会有一些是默认安装的，比如 git vim wget curl vim，如果没有，用下面方式安装即可。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="ln">1&lt;/span>sudo apt install zsh nginx tree -y
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="oh-my-zsh">oh-my-zsh&lt;/h2>
&lt;p>关于 zsh 和 oh-my-zsh 可以参考：
&lt;a
href = "https://zhuanlan.zhihu.com/p/19556676"
target="_blank" rel ="noopener"
>终极 Shell——ZSH&lt;span>&lt;svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound" style="margin: 0; width: .85em;">&lt;path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z">&lt;/path> &lt;polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9">&lt;/polygon>&lt;/svg>&lt;/span>
&lt;/a>
&lt;/p>
&lt;h3 id="安装">安装&lt;/h3>
&lt;p>脚本安装：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="ln">1&lt;/span>wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - &lt;span class="p">|&lt;/span> sh
&lt;/code>&lt;/pre>&lt;/div>&lt;p>或者手动安装:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="ln">1&lt;/span>git clone https://github.com/ohmyzsh/ohmyzsh.git ~/.oh-my-zsh
&lt;span class="ln">2&lt;/span>cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc
&lt;/code>&lt;/pre>&lt;/div>&lt;p>安装完成之后退出当前会话重新打开一个终端窗口即可。&lt;/p>
&lt;h3 id="插件">插件&lt;/h3>
&lt;p>&lt;strong>(1) autojump&lt;/strong>
github 地址
&lt;a
href = "https://github.com/wting/autojump"
target="_blank" rel ="noopener"
>autojump&lt;span>&lt;svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound" style="margin: 0; width: .85em;">&lt;path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z">&lt;/path> &lt;polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9">&lt;/polygon>&lt;/svg>&lt;/span>
&lt;/a>
&lt;/p>
&lt;p>下载并执行&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="ln">1&lt;/span>wget https://github.com/downloads/joelthelion/autojump/autojump_v21.1.2.tar.gz
&lt;span class="ln">2&lt;/span>./install.sh
&lt;/code>&lt;/pre>&lt;/div>&lt;p>最后把以下代码加入.zshrc:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="ln">1&lt;/span>&lt;span class="o">[[&lt;/span> -s ~/.autojump/etc/profile.d/autojump.sh &lt;span class="o">]]&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> . ~/.autojump/etc/profile.d/autojump.sh
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="nodenvm">node(nvm)&lt;/h2>
&lt;p>nvm github 地址：
&lt;a
href = "https://github.com/nvm-sh/nvm"
target="_blank" rel ="noopener"
>nvm-sh/nvm&lt;span>&lt;svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound" style="margin: 0; width: .85em;">&lt;path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z">&lt;/path> &lt;polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9">&lt;/polygon>&lt;/svg>&lt;/span>
&lt;/a>
&lt;/p>
&lt;h3 id="方法一脚本安装">方法一：脚本安装&lt;/h3>
&lt;p>执行脚本&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="ln">1&lt;/span>curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.1/install.sh &lt;span class="p">|&lt;/span> bash
&lt;span class="ln">2&lt;/span>&lt;span class="c1"># 或者&lt;/span>
&lt;span class="ln">3&lt;/span>wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.1/install.sh &lt;span class="p">|&lt;/span> bash
&lt;/code>&lt;/pre>&lt;/div>&lt;p>最后，将下面内容分别添加到 &lt;code>~/.bashrc&lt;/code>, &lt;code>~/.profile&lt;/code>, 和 &lt;code>~/.zshrc&lt;/code> 文件中。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="ln">1&lt;/span>export NVM_DIR=&amp;#34;$([ -z &amp;#34;${XDG_CONFIG_HOME-}&amp;#34; ]
&lt;span class="ln">2&lt;/span>&amp;amp;&amp;amp; printf %s &amp;#34;${HOME}/.nvm&amp;#34;
&lt;span class="ln">3&lt;/span>|| printf %s &amp;#34;${XDG_CONFIG_HOME}/nvm&amp;#34;)&amp;#34;
&lt;span class="ln">4&lt;/span>
&lt;span class="ln">5&lt;/span>[ -s &amp;#34;$NVM_DIR/nvm.sh&amp;#34; ] &amp;amp;&amp;amp; \. &amp;#34;$NVM_DIR/nvm.sh&amp;#34; # This loads nvm
&lt;/code>&lt;/pre>&lt;/div>&lt;p>加载配置文件：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="ln">1&lt;/span>&lt;span class="nb">source&lt;/span> ~/.bashrc
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="方法二git-安装">方法二：git 安装&lt;/h3>
&lt;p>将代码克隆到用户目录下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="ln">1&lt;/span>&lt;span class="nb">cd&lt;/span> ~/
&lt;span class="ln">2&lt;/span>git clone https://github.com/nvm-sh/nvm.git .nvm
&lt;/code>&lt;/pre>&lt;/div>&lt;p>切换到最新版本&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="ln">1&lt;/span>&lt;span class="nb">cd&lt;/span> ~/.nvm
&lt;span class="ln">2&lt;/span>git checkout v0.35.1
&lt;/code>&lt;/pre>&lt;/div>&lt;p>激活 nvm，在命令行执行：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="ln">1&lt;/span>. nvm.sh
&lt;/code>&lt;/pre>&lt;/div>&lt;p>最后，将下面内容分别添加到 &lt;code>~/.bashrc&lt;/code>, &lt;code>~/.profile&lt;/code>, 和 &lt;code>~/.zshrc&lt;/code> 文件中。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="ln">1&lt;/span>export NVM_DIR=&amp;#34;$HOME/.nvm&amp;#34;
&lt;span class="ln">2&lt;/span>[ -s &amp;#34;$NVM_DIR/nvm.sh&amp;#34; ] &amp;amp;&amp;amp; \. &amp;#34;$NVM_DIR/nvm.sh&amp;#34; # This loads nvm
&lt;span class="ln">3&lt;/span>[ -s &amp;#34;$NVM_DIR/bash_completion&amp;#34; ] &amp;amp;&amp;amp; \. &amp;#34;$NVM_DIR/bash_completion&amp;#34; # This loads nvm bash_completion
&lt;/code>&lt;/pre>&lt;/div>&lt;p>完成之后，通过 &lt;code>nvm -v&lt;/code> 查看版本来验证是否安装成功。&lt;/p>
&lt;h2 id="docker">docker&lt;/h2>
&lt;h3 id="安装-docker">安装 Docker&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="ln">1&lt;/span>curl -fsSL https://get.docker.com -o get-docker.sh &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> sudo sh get-docker.sh
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="安装-compose">安装 Compose&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="ln">1&lt;/span>sudo curl -L &lt;span class="s2">&amp;#34;https://github.com/docker/compose/releases/download/1.22.0/docke-compose-&lt;/span>&lt;span class="k">$(&lt;/span>uname -s&lt;span class="k">)&lt;/span>&lt;span class="s2">-&lt;/span>&lt;span class="k">$(&lt;/span>uname -m&lt;span class="k">)&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> -o /usr/local/bin/docker-compose
&lt;span class="ln">2&lt;/span>&lt;span class="c1"># 给Docker Compose 执行权限&lt;/span>
&lt;span class="ln">3&lt;/span>sudo chmod +x /usr/local/bin/docker-compose
&lt;span class="ln">4&lt;/span>
&lt;span class="ln">5&lt;/span>&lt;span class="c1">#查看Docker和Docker Compose的版本&lt;/span>
&lt;span class="ln">6&lt;/span>sudo docker version
&lt;span class="ln">7&lt;/span>sudo docker-compose version
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="设置镜像源">设置镜像源&lt;/h3>
&lt;p>执行下面命令进行设置&lt;/p>
&lt;p>&lt;em>ps: 阿里云镜像源是个人注册阿里云账号之后分配的个人专属镜像源。&lt;/em>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="ln">1&lt;/span>sudo mkdir -p /etc/docker
&lt;span class="ln">2&lt;/span>sudo tee /etc/docker/daemon.json &lt;span class="s">&amp;lt;&amp;lt;-&amp;#39;EOF&amp;#39;
&lt;/span>&lt;span class="ln">3&lt;/span>&lt;span class="s">{
&lt;/span>&lt;span class="ln">4&lt;/span>&lt;span class="s"> &amp;#34;registry-mirrors&amp;#34;: [&amp;#34;https://oojjt1xs.mirror.aliyuncs.com&amp;#34;]
&lt;/span>&lt;span class="ln">5&lt;/span>&lt;span class="s">}
&lt;/span>&lt;span class="ln">6&lt;/span>&lt;span class="s">EOF&lt;/span>
&lt;span class="ln">7&lt;/span>sudo systemctl daemon-reload
&lt;span class="ln">8&lt;/span>sudo systemctl restart docker
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="vim-配置">vim 配置&lt;/h2>
&lt;p>有些系统默认没有安装&lt;/p>
&lt;p>配置文件路径：&lt;/p>
&lt;ul>
&lt;li>全局配置文件：&lt;code>/etc/vim/vimrc&lt;/code>&lt;/li>
&lt;li>当前用户配置文件：&lt;code>~/.vimrc&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>将下面内容粘贴到配置文件中：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="ln">1&lt;/span>&amp;#34; 左单引号表示单行注释
&lt;span class="ln">2&lt;/span>&amp;#34; 编码指定 UTF-8
&lt;span class="ln">3&lt;/span>set fileencodings=utf-8,ucs-bom,gb18030,gbk,gb2312,cp936
&lt;span class="ln">4&lt;/span>set termencoding=utf-8
&lt;span class="ln">5&lt;/span>set encoding=utf-8
&lt;span class="ln">6&lt;/span>
&lt;span class="ln">7&lt;/span>set number &amp;#34; 显示行号
&lt;span class="ln">8&lt;/span>set cursorline &amp;#34; 突出显示当前行
&lt;span class="ln">9&lt;/span>set ruler &amp;#34; 打开状态栏标尺
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="设置别名alias">设置别名(alias)&lt;/h2>
&lt;p>将所有的别名放在单独一个文件 &lt;code>.bash_aliases&lt;/code> 中，这样更加方便管理，ubuntu 也推荐这种做法。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="ln">1&lt;/span>&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> -f ~/.bash_aliases &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;span class="ln">2&lt;/span> . ~/.bash_aliases
&lt;span class="ln">3&lt;/span>&lt;span class="k">fi&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>注意：等号两侧不能有空格!&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="ln"> 1&lt;/span>&lt;span class="c1"># 代替键盘上难以触及的 ~ 键&lt;/span>
&lt;span class="ln"> 2&lt;/span>&lt;span class="nb">alias&lt;/span> &lt;span class="nv">home&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;cd ~&amp;#34;&lt;/span>
&lt;span class="ln"> 3&lt;/span>
&lt;span class="ln"> 4&lt;/span>&lt;span class="c1"># 同样也可以为一些深层却很常用的目录设置别名&lt;/span>
&lt;span class="ln"> 5&lt;/span>&lt;span class="c1"># 如：宝塔面包的 nginx 配置目录&lt;/span>
&lt;span class="ln"> 6&lt;/span>&lt;span class="nb">alias&lt;/span> &lt;span class="nv">ng&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;cd /www/server/panel/vhost/nginx&amp;#34;&lt;/span>
&lt;span class="ln"> 7&lt;/span>
&lt;span class="ln"> 8&lt;/span>&lt;span class="c1"># 回退多级目录&lt;/span>
&lt;span class="ln"> 9&lt;/span>&lt;span class="nb">alias&lt;/span> &lt;span class="nv">bk1&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;cd ..&amp;#34;&lt;/span>
&lt;span class="ln">10&lt;/span>&lt;span class="nb">alias&lt;/span> &lt;span class="nv">bk2&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;cd ../..&amp;#34;&lt;/span>
&lt;span class="ln">11&lt;/span>&lt;span class="nb">alias&lt;/span> &lt;span class="nv">bk3&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;cd ../../..&amp;#34;&lt;/span>
&lt;span class="ln">12&lt;/span>&lt;span class="nb">alias&lt;/span> &lt;span class="nv">bk4&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;cd ../../../..&amp;#34;&lt;/span>
&lt;span class="ln">13&lt;/span>&lt;span class="nb">alias&lt;/span> &lt;span class="nv">bk5&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;cd ../../../../..&amp;#34;&lt;/span>
&lt;span class="ln">14&lt;/span>
&lt;span class="ln">15&lt;/span>&lt;span class="c1"># ls 相关&lt;/span>
&lt;span class="ln">16&lt;/span>&lt;span class="nb">alias&lt;/span> &lt;span class="nv">cls&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;clear&amp;#39;&lt;/span>
&lt;span class="ln">17&lt;/span>&lt;span class="nb">alias&lt;/span> &lt;span class="nv">ll&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;ls -l&amp;#39;&lt;/span>
&lt;span class="ln">18&lt;/span>&lt;span class="nb">alias&lt;/span> &lt;span class="nv">la&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;ls -a&amp;#39;&lt;/span>
&lt;span class="ln">19&lt;/span>
&lt;span class="ln">20&lt;/span>&lt;span class="c1"># git 相关&lt;/span>
&lt;span class="ln">21&lt;/span>&lt;span class="nb">alias&lt;/span> &lt;span class="nv">gs&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;git status&amp;#39;&lt;/span>
&lt;span class="ln">22&lt;/span>&lt;span class="nb">alias&lt;/span> &lt;span class="nv">glog&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;git log --graph --pretty=format:&amp;#39;%Cred%h%Creset -%C(yellow)%d%Cr eset %s %Cgreen(%cr) %C(bold blue)&amp;lt;%an&amp;gt;%Creset&amp;#39; --abbrev-commit&amp;#34;&lt;/span>
&lt;span class="ln">23&lt;/span>
&lt;span class="ln">24&lt;/span>&lt;span class="c1"># 解压&lt;/span>
&lt;span class="ln">25&lt;/span>&lt;span class="nb">alias&lt;/span> -s &lt;span class="nv">gz&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;tar -xzvf&amp;#39;&lt;/span>
&lt;span class="ln">26&lt;/span>&lt;span class="nb">alias&lt;/span> -s &lt;span class="nv">tgz&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;tar -xzvf&amp;#39;&lt;/span>
&lt;span class="ln">27&lt;/span>&lt;span class="nb">alias&lt;/span> -s &lt;span class="nv">zip&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;unzip&amp;#39;&lt;/span>
&lt;span class="ln">28&lt;/span>&lt;span class="nb">alias&lt;/span> -s &lt;span class="nv">bz2&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;tar -xjvf&amp;#39;&lt;/span>
&lt;span class="ln">29&lt;/span>
&lt;span class="ln">30&lt;/span>&lt;span class="c1"># other&lt;/span>
&lt;span class="ln">31&lt;/span>&lt;span class="nb">alias&lt;/span> &lt;span class="nv">vi&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;vim&amp;#39;&lt;/span>
&lt;span class="ln">32&lt;/span>&lt;span class="nb">alias&lt;/span> &lt;span class="nv">grep&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;grep --color=auto&amp;#34;&lt;/span>
&lt;span class="ln">33&lt;/span>&lt;span class="nb">alias&lt;/span> &lt;span class="nv">tree&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;tree -I &amp;#39;*svn|*node_module*&amp;#39;&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="python3">Python3&lt;/h2>
&lt;p>系统升级到 ubuntu 20.04 之后，移除了 Python 2，只保留了 Python 3。&lt;/p>
&lt;p>因此默认不能执行 Python 命令，但可以执行 python3。&lt;/p>
&lt;p>因此我们可以在 &lt;code>/usr/bin&lt;/code> 下创建一个软链接，指向 python3。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="ln">1&lt;/span>sudo ln -s /usr/bin/python3 /usr/bin/python
&lt;/code>&lt;/pre>&lt;/div>&lt;p>注意：避免某些软件需要用的 python3，所以不建议把 python3 的软连接删除&lt;/p>
&lt;hr>
&lt;p>本文完，感谢阅读。:stuck_out_tongue_winking_eye:&lt;/p></description></item></channel></rss>